O que falta?
[X] Implementação de autenticação do usuário 
[x] Como descobrir qual usuário que está on? - instalei o pacote jwt-decode e consigo obter o id do usuário.
[X] quem adicionou?
[X] filtrar a despesa por usuário
[] estilizar.



[X] 1.Configuração do Ambiente:
[X]     1.1 Iniciar um novo projeto React com Vite
[X]     1.2 Instalar dependências básicas
[X]     1.3 Configurar o ambiente de desenvolvimento

[X] 2. Desenvolvimento de Componentes e Estrutura de Páginas:
[X]     2.1 Projetar e criar componentes
[X]     2.2 Organizar componentes em diretórios lógicos
[X]     2.3 Criar a estrutura inicial das páginas

[] 3. Detalhes da aplicação:
[X]    3.1 Tratar quando é despesa e quando é entrada
[X]    3.2 Tratar pra enviar valor positivo ou negativo.
[x]    3.3 Tratar para a data seja em formato dd/mm/yyyy
[x]    3.4 Tratar para o saldo ser calculado quando for renderizado a aplicação.
[x]    3.5 Tratar para a despesa ser adicionado como negativa e + quando for salário
[X]    3.6 colocar um select para poder filtrar por mês + ano
[X]    3.7 colocar o historico de despesas em ordem crescente de data. (sort)

[] X. Implementação de login
[X]     X.1 Estabelecer se deve ser uma página ou um popup
[X]     X.2 estudar possibilidades de como fazer a autenticação de login

O QUE FALTA EU FAZER?
[]      X.1 Implementar autenticação do usuário, usuário está on?
Estabelecer utilizo isso por estado global redux? ou então por useContext?
Vou analisar um vídeo com useContext;
[x]     X.1 Visto o vídeo e aprendido um monte, muito bom!!! mas na realidade a autenticação ficará somente na parte do '/' home

[]      X.X Implementar que a despesa apareça apenas para o usuário ON

FINAL
[]      X.2 FAZER O USUÁRIO EDUARDO E SARANA


[X] 4. Conexão com MongoDB:
[X]     4.1 Configurar um servidor backend com Node.js e Express
[X]     4.2 Conectar o backend ao MongoDB
[X]     4.3 Configurar o nodemon
[x]     4.4 Instalar o Axios
[X]     4.5 Fazer a conexão Front <=> Back
[X]     4.4 Implementar APIs CRUD para interagir com o MongoDB:
[X]     4.4.1 Implementar Create e Delete

[x] 5. Integração Frontend-Backend:
[x]     5.1 Integração de chamadas de API no frontend
[x]     5.2 Atualização do gerenciamento de estado para refletir os dados do backend

[ ] 6. Estilização e Layout:
[ ]     6.1 Adição de estilos CSS
[ ]     6.2 Utilização de bibliotecas de estilos, se necessário
[ ]     6.3 Garantir que o layout seja responsivo
tirar a porra da seta no valor
 
[ ] 7. Autenticação e Autorização:
[ ]     7.1 Implementação de um sistema de login
[ ]     7.2 Proteção de rotas para usuários autenticados
 
[ ] 8. Testes e Debugging:
[ ]     8.1 Escrever testes unitários
[ ]     8.2 Realizar testes e corrigir bugs identificados

[ ] 9. Documentação:
[ ]    9.1 Documentar o código, explicando a estrutura e lógica
[ ]    9.2 Fornecer instruções claras para configurar e executar o projeto

[ ] 10. Implantação:
[ ]     10.1 Configurar um ambiente de produção
[ ]     10.2 Implantar a aplicação em um serviço de hospedagem